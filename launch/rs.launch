<launch>
    <!-- 基本參數 -->
    <arg name="camera_type" default="webcam"/>  <!-- webcam 或 realsense -->
    <arg name="video_device" default="/dev/video0"/>
    <arg name="model" default="vitl"/>
    <arg name="model_path" default="$(find depth_anything_ros)/trained_data/depth_anything_v2_metric_hypersim_$(arg model).engine"/>
    <arg name="depth_scale" default="0.5"/>
    <arg name="use_rainbow_colormap" default="true"/>

    <!-- 根據相機類型設置不同的 topic -->
    <arg name="input_image" default="/usb_cam/image_raw" if="$(eval camera_type == 'webcam')"/>
    <arg name="camera_info" default="/usb_cam/camera_info" if="$(eval camera_type == 'webcam')"/>
    <arg name="input_image" default="/camera/color/image_raw" if="$(eval camera_type == 'realsense')"/>
    <arg name="camera_info" default="/camera/color/camera_info" if="$(eval camera_type == 'realsense')"/>

    <!-- USB 相機節點 (當使用 webcam 時) -->
    <group if="$(eval camera_type == 'webcam')">
        <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen">
            <param name="video_device" value="$(arg video_device)"/>
            <param name="image_width" value="640"/>
            <param name="image_height" value="480"/>
            <param name="pixel_format" value="yuyv"/>
            <param name="camera_frame_id" value="usb_cam"/>
            <param name="camera_name" value="usb_cam"/>
            <param name="camera_info_url" value="file://$(find depth_anything_ros)/config/camera_calibration.yaml"/>
            <param name="framerate" value="30"/>
            <param name="io_method" value="mmap"/>
        </node>
    </group>

    <!-- 加載相機標定文件 -->
    <rosparam command="load" file="$(find depth_anything_ros)/config/camera_calibration.yaml"/>

    <!-- 發布靜態 TF -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
          args="0 0 0 0 0 0 map $(eval 'camera_link' if camera_type == 'realsense' else 'usb_cam')"/>

    <group ns="depth_anything">
        <!-- Nodelet manager -->
        <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"
              output="screen" respawn="true">
            <param name="num_worker_threads" value="4"/>
        </node>

        <!-- Depth estimation node -->
        <node name="depth_estimation" pkg="depth_anything_ros" type="depth_estimation_node" output="screen">
            <remap from="~input_image" to="$(arg input_image)"/>
            <remap from="~depth_registered/image_rect" to="depth_registered/image_rect"/>
            <param name="model_path" value="$(arg model_path)"/>
            <param name="depth_scale" value="$(arg depth_scale)"/>
            <param name="use_rainbow_colormap" value="$(arg use_rainbow_colormap)"/>
        </node>

        <!-- Point cloud generation -->
        <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb"
              args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager" 
              output="screen">
            <remap from="rgb/camera_info" to="$(arg camera_info)"/>
            <remap from="rgb/image_rect_color" to="$(arg input_image)"/>
            <remap from="depth_registered/image_rect" to="depth_registered/image_rect"/>
            <remap from="depth_registered/points" to="depth_registered/points"/>
            
            <param name="queue_size" value="20"/>
            <param name="approximate_sync" value="true"/>
            <param name="approximate_sync_max_interval" value="0.1"/>
            <rosparam param="~log_level">debug</rosparam>
        </node>
    </group>

    <!-- RViz -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find depth_anything_ros)/rviz/depth_anything.rviz"/>
</launch>
